name: CI/CD

on:
  push:
    branches: ["main", "staging"]
  pull_request:
    branches: ["main", "staging"]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  actions: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    timeout-minutes: 10 
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: npm ci
    - name: Run tests
      run: npm test
    - name: Build
      run: npm run build
    - name: Check Build Directory
      run: ls -la ./build
    - name: Upload artifact
      if: matrix.node-version == '20.x'
      uses: actions/upload-pages-artifact@v3
      with:
        path: './build'
        name: github-pages-artifact-${{ matrix.node-version }}

  collect-artifacts:
    needs: test-and-build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: Merge artifacts
        run: |
          mkdir -p ./merged-build
          cp -R ./artifacts/*/* ./merged-build/
      - name: Upload merged artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './merged-build'
          name: github-pages  # Đảm bảo tên này là "github-pages"

  deploy-production:
    needs: collect-artifacts
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: List artifacts
        run: |
          echo "Available artifacts:"
          artifacts=$(gh api repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts --jq '.artifacts[].name')
          echo "$artifacts"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Download and check artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./public
      - name: List files in public folder
        run: ls -R ./public
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-staging:
    needs: collect-artifacts
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages-artifact
          path: ./build
      - name: Deploy to GitHub Pages (Staging)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          publish_branch: gh-pages
          destination_dir: staging